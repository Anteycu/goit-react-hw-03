{"version":3,"sources":["components/ContactForm/contactForm.module.css","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactListItem/contactListItem.module.css"],"names":["module","exports","ContactListItem","text","number","onRemove","className","styles","contactsCards","contactsCardsItems","button","type","onClick","ContactList","contacts","onRemoveContact","map","id","key","ContactForm","state","name","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","label","inputs","onChange","placeholder","required","Component","Filter","changeFilter","App","filter","getVisibleContacts","contact","toLowerCase","includes","handleAddContact","contactObj","uuidv4","find","alert","prev","handlerRemoveContact","idContact","persistedTasks","localStorage","getItem","JSON","parse","prevProps","prevState","conacts","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02a61042.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"contactForm_label__3c00c\",\"inputs\":\"contactForm_inputs__3H3uf\",\"button\":\"contactForm_button__ysshX\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactListItem.module.css\";\r\n\r\nexport function ContactListItem({ text, number, onRemove }) {\r\n  return (\r\n    <li className={styles.contactsCards}>\r\n      <p className={styles.contactsCardsItems}>{text}:</p>\r\n      <p className={styles.contactsCardsItems}>{number}</p>\r\n      <button className={styles.button} type=\"button\" onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\r\n\r\nexport const ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, text, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        text={text}\r\n        number={number}\r\n        onRemove={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactForm.module.css\";\r\n\r\nexport class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact(this.state.name, this.state.number);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.inputs}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n              placeholder=\"name\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Tel.number\r\n            <input\r\n              className={styles.inputs}\r\n              type=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              placeholder=\"number\"\r\n              required\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Filter({ value, changeFilter }) {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => changeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ContactList } from \"./ContactList/ContactList\";\nimport { ContactForm } from \"./ContactForm/ContactForm\";\nimport { Filter } from \"./Filter/Filter\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedTasks = localStorage.getItem(\"contacts\");\n    if (persistedTasks) {\n      this.setState({\n        contacts: JSON.parse(persistedTasks),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.conacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.text.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  handleAddContact = (name, number) => {\n    const contactObj = {\n      id: uuidv4(),\n      text: name,\n      number: number,\n    };\n\n    let checkedArr = this.state.contacts.find(\n      (contact) => contact.text === name\n    );\n\n    if (checkedArr) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      this.setState((prev) => ({\n        contacts: [...prev.contacts, contactObj],\n      }));\n    }\n  };\n\n  handlerRemoveContact = (idContact) => {\n    this.setState((prev) => ({\n      contacts: prev.contacts.filter((contact) => contact.id !== idContact),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} changeFilter={this.changeFilter} />\n        )}\n\n        {contacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.handlerRemoveContact}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsCards\":\"contactListItem_contactsCards__x9NyY\",\"contactsCardsItems\":\"contactListItem_contactsCardsItems__2J1Jk\",\"button\":\"contactListItem_button__yfwaT\"};"],"sourceRoot":""}